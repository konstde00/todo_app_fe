version: 2.1

orbs:
  node: circleci/node@4.1
  aws-cli: circleci/aws-cli@4.0

jobs:
  build:
    working_directory: ~/todo-app-fe
    docker:
      - image: cimg/node:16.20.1
    parameters:
      env_file_name:
        type: string
    steps:
      - attach_workspace:
          at: .
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install Dependencies
          command: npm install --force
      - save_cache:
          paths:
            - ./node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Setup Environment Variables
          command: |
            echo "export const environment = {
              production: '${IS_FE_PRODUCTION_MODE_ENABLED}',
              apiBaseUrl: '${API_BASE_URL}',
              googleAnalyticsApiKey: '${GOOGLE_ANALYTICS_API_KEY}'
            };" > << parameters.env_file_name >>
      - run:
          name: Build Angular App
          command: |
            npm install -g @angular/cli@16
            ng build --configuration production
      - persist_to_workspace:
          root: .
          paths:
            - ./dist

  deploy:
    docker:
      - image: cimg/aws:2023.09
    parameters:
      bucket_name:
        type: string
      distribution_id:
        type: string
    steps:
      - attach_workspace:
          at: .
      - aws-cli/setup:
          aws_access_key_id: AWS_ACCESS_KEY_ID
          aws_secret_access_key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
      - run:
          name: Deploy to S3
          command: |

            aws s3 rm s3://<< parameters.bucket_name >>/ --recursive
            aws s3 sync dist/todo-app-fe/ s3://<< parameters.bucket_name >>/

            aws cloudfront create-invalidation --distribution-id << parameters.distribution_id >> --paths "/*"

      - persist_to_workspace:
          root: .
          paths:
            - dist

workflows:
  version: 2

  deploy_staging:
    jobs:
      - hold:
          type: approval
          name: deploy to staging?
          filters:
            branches:
              only:
                - staging
      - build:
          name: Build
          env_file_name: ./src/environments/environment.staging.ts
          requires:
            - deploy to staging?
      - deploy:
          name: Deploy to staging
          bucket_name: staging-todo-app-website-hosting
          distribution_id: EC98E4IEI7YQ1
          requires:
            - Build
          context:
            - Staging_Context

  deploy_prod:
    jobs:
      - build:
          name: Build
          env_file_name: ./src/environments/environment.staging.ts
          filters:
            branches:
              only:
                - main
      - deploy:
          name: Deploy to prod
          bucket_name: todo-app-website-hosting
          distribution_id: E30CPPVDZM1WVG
          requires:
            - Build
          context:
            - Prod_Context
